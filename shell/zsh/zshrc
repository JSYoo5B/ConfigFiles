############################################################################
## Basic z-shell usage configuration (with oh-my-zsh)                      #
############################################################################
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# zsh and Oh-my-zsh config aliases
alias zshconfig="vi ~/.zshrc"
alias omzconfig="vi ~/.oh-my-zsh"

# ZSH Theme and plugins
ZSH_THEME="jsyoo5b"
plugins=(
  git sudo command-not-found
#  zsh-completions
  fast-syntax-highlighting
  alias-tips
  autojump
  tmux tmuxinator
)

COMPLETION_WAITING_DOTS="true"

# Reveal aliased commands
export ZSH_PLUGINS_ALIAS_TIPS_REVEAL=1
export ZSH_PLUGINS_ALIAS_TIPS_REVEAL_TEXT="Actual command: "

# History setting
HIST_STAMPS="dd.mm.yyyy"

# zsh-completion setting
#autoload -U compinit && compinit

# Load oh-my-zsh with given configuration
source $ZSH/oh-my-zsh.sh

# Detect if current shell is running on WSL
if [[ -z "$WSL_DISTRO_NAME" ]]; then
	if [[ $OSTYPE == darwin* ]]; then
		# WSL cannot run macOS, skip
	elif [[ "$(</proc/version)" == *([Mm]icrosoft|WSL)* ]]; then
		# When the kernel version has Microsoft or WSL 
		WSL_DISTRO_NAME=$(grep -oP '(?<=^ID=).+' /etc/os-release | tr -d '"')
	fi
	export DISPLAY=:0
else
	# When the $WSL_DISTRO_NAME defined, current shell is running on native
	export DISPLAY=$(grep -oP '(?<=^nameserver ).+' /etc/resolv.conf):0
fi

# When the WSL distro found, attach after hostname
if [[ ! -z "$WSL_DISTRO_NAME" ]]; then
	ZSH_THEME_CONF[HOST_SUFFIX]="%F{yellow}/${WSL_DISTRO_NAME}"
fi

############################################################################
## User configuration (General shell setting)                              #
############################################################################

# manual path
export MANPATH="/usr/local/man:$MANPATH"

# Set default editor
export VISUAL=vim
export EDITOR="$VISUAL"

# Language environment
export LANG=en_US.UTF-8

# Import alias and shell config file
[ -f ~/.zsh_aliases ] && source ~/.zsh_aliases

# Import development envirnment config file
[ -f ~/.zsh_devconfig ] && source ~/.zsh_devconfig

# Enable fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Reset exit code to 0 for this script
# (Short-circuit condition check & apply may change exit code)
true
